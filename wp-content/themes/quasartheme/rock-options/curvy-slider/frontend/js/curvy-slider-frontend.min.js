(function() {
  jQuery.curvySlider = function(ga, $, aa, ba, Q) {
    function ca() {
      2 < k.length && k.splice(2, 1);
      for (var d = c = 0;d < k.scenes.length;d++) {
        if ("" != k.scenes[d].sceneDetails.fallbackURL) {
          b[c] = {};
          b[c].sceneID = "curvy-fallback-" + c;
          b[c].sceneDetails = {};
          b[c].sceneDetails.sceneTime = k.scenes[d].sceneDetails.sceneTime;
          b[c].sceneDetails.sceneDelay = k.scenes[d].sceneDetails.sceneDelay;
          var e = '<img src="' + k.scenes[d].sceneDetails.fallbackURL + '" />';
          b[c].imageString = 0 === c ? '<div class="' + b[c].sceneID + '">' + e + "</div>" : '<div class="' + b[c].sceneID + ' hide">' + e + "</div>";
          jQuery(l + " .curvy-slider-fallback-canvas").append(b[c].imageString);
          R(c);
          c++;
        }
      }
      c = b.length - 1;
    }
    function R(d) {
      d = '<div class="curvy-nav-elem" ref="nav-elem-' + d + '"></div>';
      jQuery(l + " .curvy-slider-nav-container .curvy-slider-nav").append(d);
    }
    function I(d) {
      d >= b.length || (jQuery(l + " .curvy-fallback-" + c).animate({opacity:"0"}, Number(b[c].sceneDetails.sceneTime), function() {
        jQuery(this).addClass("hide");
      }), jQuery(l + " .curvy-fallback-" + d).css("opacity", "0").removeClass("hide"), jQuery(l + " .curvy-fallback-" + d).animate({opacity:"1"}, 1E3 * Number(b[d].sceneDetails.sceneTime), function() {
        c = d;
      }));
    }
    function E() {
      return navigator.userAgent.match(/msie [7]/i) || navigator.userAgent.match(/msie [8]/i) ? !0 : !1;
    }
    function da() {
      b = [];
      var d = k.fonts ? k.fonts : [];
      if (0 < d.length) {
        for (var c = 0;c < d.length;c++) {
          J.push(d[c]);
        }
        WebFont.load({google:{families:J}, fontactive:function(d, a) {
          S++;
          S >= J.length && !K && (K = !0, T());
        }});
      } else {
        K = !0, T();
      }
    }
    function T() {
      for (var d = [], c = 0;c < k.scenes.length && "undefined" != typeof k.scenes[c].imageArray;c++) {
        for (var b = 0;b < k.scenes[c].imageArray.length;b++) {
          d.push({id:k.scenes[c].imageArray[b].id, url:k.scenes[c].imageArray[b].url});
        }
      }
      if (0 < d.length) {
        c = new CAAT.Module.Preloader.Preloader;
        for (b = 0;b < d.length;b++) {
          c.addElement(d[b].id, d[b].url);
        }
        c.load(function(a) {
          U(a);
        });
      } else {
        U();
      }
    }
    function F(d) {
      d >= b.length || (q.easeInOut(d, b[d].sceneDetails.incomingMotion, b[d].sceneDetails.incomingAnchor, c, b[c].sceneDetails.incomingMotion, b[c].sceneDetails.incomingAnchor, 1E3 * b[c].sceneDetails.sceneTime, 1, r(b[d].sceneDetails.incomingEasing), r(b[c].sceneDetails.incomingEasing)), c = d, jQuery("#scenes-navigation ul li.scene-nav-elem.active").removeClass("active"), jQuery("#scene-nav-" + d).addClass("active"));
    }
    function A(d, e, n) {
      d = (d = "undefined" === typeof d || null == d ? null : d) ? (new CAAT.PathUtil.Path).beginPath(parseInt(d[0].x) - u, parseInt(d[0].y) - v).addQuadricTo(parseInt(d[1].x) - u, parseInt(d[1].y) - v, parseInt(d[2].x) - u, parseInt(d[2].y) - v).endPath() : (new CAAT.PathUtil.Path).beginPath(1150, 219).addQuadricTo(1130, 350, 780, 280).endPath();
      b[c].path.addSegment(d);
      b[c].pa.setPath(b[c].path);
      return d;
    }
    function U(d) {
      CAAT.RETINA_DISPLAY_ENABLED = !0;
      jQuery(".loader-container").length && jQuery(".loader-container").remove();
      q = (new CAAT.Foundation.Director).initialize(x, y, w);
      q.enableResizeEvents(CAAT.Foundation.Director.RESIZE_PROPORTIONAL);
      q.setImagesCache(d);
      V = (new CAAT.PathUtil.Path).endPath();
      (new CAAT.Foundation.UI.PathActor).enableEvents(!0).setBounds(0, 0, q.width, q.height).setInteractive(!0).setPath(V).showBoundingBox(!1);
      ea();
      0 < b.length || (c = b.length, b[c] = {}, b[c].theScene = q.createScene(), b[c].theSceneID = "scene-" + c, b[c].path = (new CAAT.PathUtil.Path).endPath(), b[c].pa = (new CAAT.Foundation.UI.PathActor).setBounds(0, 0, q.width, q.height).setInteractive(!0).setPath(b[c].path).showBoundingBox(!1), b[c].bg = {}, b[c].bg.bgActor = (new CAAT.Foundation.UI.ShapeActor).setShape(CAAT.Foundation.UI.ShapeActor.SHAPE_RECTANGLE).centerAt(0, 0).setSize(x, y), b[c].theScene.addChildAt(b[c].bg.bgActor, 0), b[c].imageArray = 
      [], b[c].sceneDetails = {}, b[c].sceneDetails.sceneTime = .65, b[c].sceneDetails.sceneDelay = 6, b[c].sceneDetails.incomingMotion = 0, b[c].sceneDetails.incomingAnchor = 0, b[c].sceneDetails.incomingEasing = "easeOut", b[c].theSceneID.split("-"), b[c].actorElems = []);
      CAAT.loop(30);
      "true" == z ? (F(0), jQuery(l + ' .curvy-nav-elem[ref="nav-elem-0"]').addClass("active"), jQuery(l + " #playAllScenesBtn").trigger("click")) : (F(0), jQuery(l + ' .curvy-nav-elem[ref="nav-elem-0"]').addClass("active"));
      var e = 0, n = 0, a = 0;
      jQuery("#" + w).on("touchstart", function(a) {
        e = a.originalEvent.touches[0].pageY;
        n = jQuery("body").scrollTop();
      }).on("touchmove", function(d) {
        a = e - d.originalEvent.touches[0].pageY + n;
      }).on("touchend", function(d) {
        jQuery("html, body").scrollTop(a);
      });
      jQuery(window).trigger("resize");
      jQuery(l).animate({opacity:1}, 180);
    }
    function ea() {
      2 < k.length && k.splice(2, 1);
      for (var d = c = 0;d < k.scenes.length;d++) {
        var e = k.scenes[d];
        b[c] = {};
        b[c].theScene = q.createScene();
        b[c].path = (new CAAT.PathUtil.Path).endPath();
        b[c].pa = (new CAAT.Foundation.UI.PathActor).setBounds(0, 0, q.width, q.height).setInteractive(!0).setPath(b[c].path).showBoundingBox(!1);
        b[c].imageArray = "undefined" != typeof k.scenes[d].imageArray ? k.scenes[d].imageArray : [];
        b[c].bg = {};
        b[c].bg.bgType = k.scenes[d].bg.bgType;
        b[c].bg.bgURL = k.scenes[d].bg.bgURL;
        b[c].bg.bgColor = k.scenes[d].bg.bgColor;
        "image" == b[c].bg.bgType ? (b[c].bg.bgActor = (new CAAT.Foundation.ActorContainer).setBounds(0, 0, q.width, q.height).setSize(x, y).centerAt(x / 2, y / 2), b[c].theScene.addChildAt(b[c].bg.bgActor, 0), fa(b[c].bg.bgActor, b[c].theSceneID, b[c].bg.bgURL)) : (b[c].bg.bgActor = (new CAAT.Foundation.UI.ShapeActor).setShape(CAAT.Foundation.UI.ShapeActor.SHAPE_RECTANGLE).centerAt(0, 0).setSize(x, y), b[c].theScene.addChildAt(b[c].bg.bgActor, 0), "color" == b[c].bg.bgType && b[c].bg.bgActor.setFillStyle(b[c].bg.bgColor));
        b[c].sceneDetails = {};
        b[c].sceneDetails.sceneTime = k.scenes[d].sceneDetails.sceneTime;
        b[c].sceneDetails.sceneDelay = k.scenes[d].sceneDetails.sceneDelay;
        b[c].sceneDetails.incomingMotion = k.scenes[d].sceneDetails.incomingMotion;
        b[c].sceneDetails.incomingAnchor = k.scenes[d].sceneDetails.incomingAnchor;
        b[c].sceneDetails.incomingEasing = k.scenes[d].sceneDetails.incomingEasing;
        b[c].theSceneID = "scene-" + c;
        b[c].theSceneID.split("-");
        b[c].actorElems = [];
        for (var n = 0;n < e.actorElems.length;n++) {
          switch(e.actorElems[n].objType) {
            case "singleText":
              W(L, e.actorElems[n]);
              break;
            case "singleBoxedText":
              var a = e.actorElems[n], l = (a = "undefined" === typeof a || null == a ? null : a) ? a.elemID : M(), f = "Baumans";
              a && a.objFont && (f = a.objFont, f.indexOf(":") && (f = f.split(":"), f = f[0]));
              f = (new CAAT.Foundation.UI.TextActor).setFont(a ? a.fontStyle + " " + a.objFontSize + " " + f : "40px Baumans").setText(a ? a.objText : jQuery("#" + l + " .text-holder").val()).setTextFillStyle(a ? a.objColor : "#f0f0f0").emptyBehaviorList();
              f.centerAt((f.textWidth + parseInt(a ? a.paddingH : 40)) / 2, (f.textHeight + parseInt(a ? a.paddingV : 30)) / 2);
              var h = (new CAAT.Foundation.ActorContainer).setLocation(a ? a.coordsArray[0].x - u : 1800, a ? a.coordsArray[0].y - v : 400).setAlpha(a ? a.startAlpha : 1).enableEvents(!0).emptyBehaviorList();
              h.addChild(f);
              var g = f.textWidth + parseInt(a ? a.paddingH : 40), m = f.textHeight + parseInt(a ? a.paddingV : 30), p = parseInt(a ? a.bgRadius : 10), w = a ? a.objBGColor : "#333333", t = document.createElement("canvas"), p = "undefined" == typeof p ? p = 20 : p, s = t.getContext("2d");
              t.width = g;
              t.height = m;
              s.fillStyle = w;
              s.clearRect(0, 0, g, m);
              s.beginPath();
              s.moveTo(p, 0);
              s.lineTo(g - p, 0);
              s.quadraticCurveTo(g, 0, g, p);
              s.lineTo(g, m - p);
              s.quadraticCurveTo(g, m, g - p, m);
              s.lineTo(p, m);
              s.quadraticCurveTo(0, m, 0, m - p);
              s.lineTo(0, p);
              s.quadraticCurveTo(0, 0, p, 0);
              s.closePath();
              s.fill();
              h.setBackgroundImage(t);
              m = void 0;
              m = a ? A(a.coordsArray, h, a.elemID) : A(null, h, l);
              a && !0 == a.hideBeginning && h.setAlpha(0);
              "true" != z && h.setGlobalAlpha(!0).addBehavior((new CAAT.Behavior.PathBehavior).setPath(m).setDelayTime(a ? parseInt(a.delayTime) : 1800, a ? parseInt(a.motionTime) : 1E3).setCycle(!1).setAutoRotate(a && a.autoRotate ? !0 : !1, a && a.autoRotate ? CAAT.PathBehavior.autorotate.FREE : !1).setInterpolator(a ? r(a.easingName) : (new CAAT.Interpolator).createExponentialOutInterpolator(4))).addBehavior((new CAAT.Behavior.AlphaBehavior).setInterpolator(a ? r(a.easingName) : (new CAAT.Interpolator).createExponentialOutInterpolator(4)).setValues(a ? 
              a.startAlpha : 1, a ? a.endAlpha : 1).setDelayTime(a ? parseInt(a.delayTime) : 1800, a ? parseInt(a.motionTime) : 1E3)).addBehavior((new CAAT.Behavior.ScaleBehavior).setInterpolator(a ? r(a.easingName) : (new CAAT.Interpolator).createExponentialOutInterpolator(4)).setValues(a ? a.scaleStart : 1, a ? a.scaleEnd : 1, a ? a.scaleStart : 1, a ? a.scaleEnd : 1).setDelayTime(a ? parseInt(a.delayTime) : 1800, a ? parseInt(a.motionTime) : 1E3));
              g = a ? a : {};
              a || (g.coordsArray = [], g.delayTime = 650, g.motionTime = 650, g.outOfSceneTime = 650, g.waitOnSceneTime = 3, g.outOfSceneMotion = "noMotion", g.objType = "singleBoxedText", g.objText = "New Text", g.fontStyle = "", g.objSrc = "", g.linkActive = !1, g.objLink = "", g.objBorderColor = "", g.objColor = "#3e3e3e", g.objFontSize = "40px", g.objFont = "sans", g.elemID = l, g.autoRotate = !1, g.hideBeginning = !1, g.easingName = "", g.startAlpha = 1, g.endAlpha = 1, g.scaleStart = 1, g.scaleEnd = 
              1);
              g.pathRemoved = !1;
              g.path = m;
              m = g.path.numControlPoints();
              if (0 >= g.coordsArray.length) {
                for (p = 0;p < m;p++) {
                  g.coordsArray.push(g.path.getControlPoint(p));
                }
              }
              g.Actor = h;
              g.textActor = f;
              g.easing = a ? r(a.easingName) : (new CAAT.Interpolator).createExponentialOutInterpolator(4);
              b[c].actorElems || (b[c].actorElems = []);
              b[c].actorElems.push(g);
              a && a.linkActive && N(h, a.objLink, a);
              b[c].theScene.addChildAt(h, b[c].theScene.childrenList.length);
              a && "noMotion" != a.outOfSceneMotion && "true" != z && G(g, g.outOfSceneMotion);
              O(l);
              break;
            case "image":
              a = e.actorElems[n];
              l = (a = "undefined" === typeof a || null == a ? null : a) ? a.elemID : M();
              a && a.objSrc.substr(a.objSrc.lastIndexOf("/") + 1);
              f = (new CAAT.Foundation.Actor).setLocation(a ? a.coordsArray[0].x - u : 1800, a ? a.coordsArray[0].y - v : 400).enableEvents(!0).setPositionAnchor(.5, .5).emptyBehaviorList();
              a && f.setBackgroundImage(q.getImage(a.elemID));
              g = void 0;
              g = a ? A(a.coordsArray, f, a.elemID) : A(null, f, l);
              a && !0 == a.hideBeginning && f.setAlpha(0);
              "true" != z && f.addBehavior((new CAAT.Behavior.PathBehavior).setValues(g).setDelayTime(a ? parseInt(a.delayTime) : 1800, a ? parseInt(a.motionTime) : 1E3).setCycle(!1).setAutoRotate(a && a.autoRotate ? !0 : !1, a && a.autoRotate ? CAAT.PathBehavior.autorotate.FREE : !1).setInterpolator(a ? r(a.easingName) : (new CAAT.Interpolator).createExponentialOutInterpolator(4))).addBehavior((new CAAT.Behavior.AlphaBehavior).setInterpolator(a ? r(a.easingName) : (new CAAT.Interpolator).createExponentialOutInterpolator(4)).setValues(a ? 
              a.startAlpha : 1, a ? a.endAlpha : 1).setDelayTime(a ? parseInt(a.delayTime) : 1800, a ? parseInt(a.motionTime) : 1E3)).addBehavior((new CAAT.Behavior.ScaleBehavior).setInterpolator(a ? r(a.easingName) : (new CAAT.Interpolator).createExponentialOutInterpolator(4)).setValues(a ? a.scaleStart : 1, a ? a.scaleEnd : 1, a ? a.scaleStart : 1, a ? a.scaleEnd : 1).setDelayTime(a ? parseInt(a.delayTime) : 1800, a ? parseInt(a.motionTime) : 1E3));
              h = a ? a : {};
              a || (h.coordsArray = [], h.delayTime = 650, h.motionTime = 650, h.outOfSceneTime = 650, h.waitOnSceneTime = 3, h.outOfSceneMotion = "noMotion", h.objType = "image", h.objText = "New Text", h.fontStyle = "", h.objSrc = "", h.linkActive = !1, h.objLink = "", h.objBorderColor = "", h.objColor = "#3e3e3e", h.objFontSize = "40px", h.objFont = "sans", h.elemID = l, h.autoRotate = !1, h.hideBeginning = !1, h.easingName = "", h.startAlpha = 1, h.endAlpha = 1, h.scaleStart = 1, h.scaleEnd = 
              1);
              h.pathRemoved = !1;
              h.path = g;
              g = h.path.numControlPoints();
              for (m = 0;m < g;m++) {
              }
              if (0 >= h.coordsArray.length) {
                for (m = 0;m < g;m++) {
                  h.coordsArray.push(h.path.getControlPoint(m));
                }
              }
              for (m = 0;m < g;m++) {
              }
              h.Actor = f;
              h.easing = a ? r(a.easingName) : (new CAAT.Interpolator).createExponentialOutInterpolator(4);
              b[c].actorElems || (b[c].actorElems = []);
              b[c].actorElems.push(h);
              a && a.linkActive && N(f, a.objLink);
              b[c].theScene.addChildAt(f, b[c].theScene.childrenList.length);
              a && "noMotion" != a.outOfSceneMotion && G(h, h.outOfSceneMotion);
              for (m = 0;m < g;m++) {
              }
              O(l);
              break;
            case "button":
              addButton(L);
              break;
            default:
              W(L);
          }
        }
        R(c);
        c++;
      }
      c = b.length - 1;
    }
    function W(d, e) {
      var n = (e = "undefined" === typeof e || null == e ? null : e) ? e.elemID : M(), a = "Baumans";
      e && e.objFont && (a = e.objFont, a.indexOf(":") && (a = a.split(":"), a = a[0]));
      var a = (new CAAT.Foundation.UI.TextActor).setFont(e ? e.fontStyle + " " + e.objFontSize + " " + a : "40px Baumans").setText(e ? e.objText : jQuery("#" + n + " .text-holder").val()).setLocation(e ? e.coordsArray[0].x - u : 1800, e ? e.coordsArray[0].y - v : 400).setAlpha(e ? e.startAlpha : 1).setTextFillStyle(e ? e.objColor : "#3e3e3e").enableEvents(!0).emptyBehaviorList(), k;
      k = e ? A(e.coordsArray, a, e.elemID) : A(null, a, n);
      e && !0 == e.hideBeginning && a.setAlpha(0);
      "true" != z && a.addBehavior((new CAAT.Behavior.PathBehavior).setPath(k).setDelayTime(e ? parseInt(e.delayTime) : 1800, e ? parseInt(e.motionTime) : 1E3).setCycle(!1).setAutoRotate(e && e.autoRotate ? !0 : !1, e && e.autoRotate ? CAAT.PathBehavior.autorotate.FREE : !1).setInterpolator(e ? r(e.easingName) : (new CAAT.Interpolator).createExponentialOutInterpolator(4))).addBehavior((new CAAT.Behavior.AlphaBehavior).setInterpolator(e ? r(e.easingName) : (new CAAT.Interpolator).createExponentialOutInterpolator(4)).setValues(e ? 
      e.startAlpha : 1, e ? e.endAlpha : 1).setDelayTime(e ? parseInt(e.delayTime) : 1800, e ? parseInt(e.motionTime) : 1E3)).addBehavior((new CAAT.Behavior.ScaleBehavior).setInterpolator(e ? r(e.easingName) : (new CAAT.Interpolator).createExponentialOutInterpolator(4)).setValues(e ? e.scaleStart : 1, e ? e.scaleEnd : 1, e ? e.scaleStart : 1, e ? e.scaleEnd : 1).setDelayTime(e ? parseInt(e.delayTime) : 1800, e ? parseInt(e.motionTime) : 1E3));
      var f = e ? e : {};
      e || (f.coordsArray = [], f.delayTime = 650, f.motionTime = 650, f.outOfSceneTime = 650, f.waitOnSceneTime = 3, f.outOfSceneMotion = "noMotion", f.objType = "singleText", f.objText = "New Text", f.fontStyle = "", f.objSrc = "", f.linkActive = !1, f.objLink = "", f.objBorderColor = "", f.objColor = "#3e3e3e", f.objFontSize = "40px", f.objFont = "sans", f.elemID = n, f.autoRotate = !1, f.hideBeginning = !1, f.easingName = "", f.startAlpha = 1, f.endAlpha = 1, f.scaleStart = 1, f.scaleEnd = 1);
      f.pathRemoved = !1;
      f.path = k;
      k = f.path.numControlPoints();
      if (0 >= f.coordsArray.length) {
        for (var h = 0;h < k;h++) {
          f.coordsArray.push(f.path.getControlPoint(h));
        }
      }
      f.Actor = a;
      f.easing = e ? r(e.easingName) : (new CAAT.Interpolator).createExponentialOutInterpolator(4);
      b[c].actorElems || (b[c].actorElems = []);
      b[c].actorElems.push(f);
      e && e.linkActive && N(a, e.objLink);
      b[c].theScene.addChildAt(a, b[c].theScene.childrenList.length);
      e && "noMotion" != e.outOfSceneMotion && G(f, f.outOfSceneMotion);
      O(n);
    }
    function fa(d, e, n, a) {
      var k = {};
      k.url = n;
      k.id = e;
      "undefined" != typeof b[c] && b[c].imageArray.push(k);
      (new CAAT.Module.Preloader.Preloader).addElement(e, n).load(function(c) {
        d.setBackgroundImage(c[c.length - 1].image);
        "undefined" != typeof callback && a();
      });
    }
    function N(d, c, b) {
      "undefined" == typeof b ? (d.mouseClick = function(a) {
        window.location.href = c;
      }, d.mouseEnter = function(a) {
        document.getElementById(w).style.cursor = "pointer";
      }, d.mouseExit = function(a) {
        document.getElementById(w).style.cursor = "default";
      }) : "singleBoxedText" != b.objType || b.buttonCover || (b.buttonCover = (new CAAT.Foundation.UI.ShapeActor).setShape(CAAT.Foundation.UI.ShapeActor.SHAPE_RECTANGLE).setBounds(0, 0, d.width, d.height).setFillStyle("blue").setAlpha(0), b.buttonCover.mouseClick = function(a) {
        window.location.href = c;
      }, b.buttonCover.mouseEnter = function(a) {
        document.getElementById(w).style.cursor = "pointer";
      }, b.buttonCover.mouseExit = function(a) {
        document.getElementById(w).style.cursor = "default";
      }, d.addChild(b.buttonCover));
    }
    function X() {
      E() || P();
      B = setTimeout(Y, 1E3 * b[c].sceneDetails.sceneDelay);
      Z = (new Date).getTime();
    }
    function Y() {
      var d = c;
      d++;
      d >= b.length && (d = 0);
      E() ? I(d) : F(d);
      c = d;
      jQuery(l + " .curvy-nav-elem.active").removeClass("active");
      jQuery(l + ' .curvy-nav-elem[ref="nav-elem-' + c + '"]').addClass("active");
      C || X();
    }
    function P() {
      for (var d = 0;d < b[c].actorElems.length;d++) {
        b[c].actorElems[d].Actor.setLocation(b[c].actorElems[d].coordsArray[0].x - u, b[c].actorElems[d].coordsArray[0].y - v).setAlpha(!0 == b[c].actorElems[d].hideBeginning ? 0 : b[c].actorElems[d].startAlpha);
      }
      for (d = 0;d < b[c].actorElems.length;d++) {
        b[c].actorElems[d].Actor.emptyBehaviorList().setRotation(0).setGlobalAlpha(!0).setScale(b[c].actorElems[d].scaleStart, b[c].actorElems[d].scaleStart).addBehavior((new CAAT.Behavior.PathBehavior).setValues(b[c].actorElems[d].path).setDelayTime(b[c].actorElems[d].delayTime, b[c].actorElems[d].motionTime).setCycle(!1).setAutoRotate(b[c].actorElems[d].autoRotate ? !0 : !1, b[c].actorElems[d].autoRotate ? CAAT.PathBehavior.autorotate.FREE : !1).setInterpolator(b[c].actorElems[d].easing)).addBehavior((new CAAT.Behavior.AlphaBehavior).setValues(b[c].actorElems[d].startAlpha, 
        b[c].actorElems[d].endAlpha).setDelayTime(b[c].actorElems[d].delayTime, b[c].actorElems[d].motionTime).setInterpolator(b[c].actorElems[d].easing)).addBehavior((new CAAT.Behavior.ScaleBehavior).setValues(b[c].actorElems[d].scaleStart, b[c].actorElems[d].scaleEnd, b[c].actorElems[d].scaleStart, b[c].actorElems[d].scaleEnd).setDelayTime(b[c].actorElems[d].delayTime, b[c].actorElems[d].motionTime).setInterpolator(b[c].actorElems[d].easing)), "noMotion" != b[c].actorElems[d].outOfSceneMotion && 
        G(b[c].actorElems[d], b[c].actorElems[d].outOfSceneMotion);
      }
    }
    function r(d) {
      switch(d) {
        case "easeIn":
          return(new CAAT.Behavior.Interpolator).createExponentialInInterpolator(6, !1);
        case "easeOut":
          return(new CAAT.Behavior.Interpolator).createExponentialOutInterpolator(6, !1);
        case "easeInOut":
          return(new CAAT.Behavior.Interpolator).createExponentialInOutInterpolator(6, !1);
        case "bounce":
          return(new CAAT.Behavior.Interpolator).createBounceOutInterpolator(!1);
        case "elastic":
          return(new CAAT.Behavior.Interpolator).createElasticOutInterpolator(1, .2, !1);
        case "linear":
          return(new CAAT.Behavior.Interpolator).createLinearInterpolator(!1, !1);
        default:
          return(new CAAT.Behavior.Interpolator).createLinearInterpolator(!1, !1);
      }
    }
    function M() {
      if (0 < jQuery("#elem-" + t).length) {
        for (;0 < jQuery("#elem-" + t).length;) {
          if (t++, 0 >= jQuery("#elem-" + t).length) {
            return "elem-" + t;
          }
        }
      } else {
        return t++, "elem-" + (t - 1);
      }
    }
    function O(d) {
      for (var e = 0;e < b[c].actorElems.length;e++) {
        if (b[c].actorElems[e].elemID == d) {
          return e;
        }
      }
    }
    function G(d, c) {
      var b = 0, b = 0, b = d.Actor.width, a = d.Actor.height, k = d.path.numControlPoints();
      d.outCoordsArray = [];
      for (var f = 0;f < k;f++) {
        d.outCoordsArray.push(d.path.getControlPoint(f));
      }
      if ("noMotion" != c) {
        if ("toRight" == c) {
          b = "image" == d.objType ? x + u + b / 2 + 40 : x + u + 40, b = (new CAAT.LinearPath).setInitialPosition(parseInt(d.outCoordsArray[2].x), parseInt(d.outCoordsArray[2].y)).setFinalPosition(parseInt(b), parseInt(d.outCoordsArray[2].y));
        } else {
          if ("toLeft" == c) {
            b = "image" == d.objType ? -40 - b / 2 : -40 - b, b = (new CAAT.LinearPath).setInitialPosition(parseInt(d.outCoordsArray[2].x), parseInt(d.outCoordsArray[2].y)).setFinalPosition(parseInt(b), parseInt(d.outCoordsArray[2].y));
          } else {
            if ("toTop" == c) {
              b = "image" == d.objType ? -40 - a / 2 : -40 - a, b = (new CAAT.LinearPath).setInitialPosition(parseInt(d.outCoordsArray[2].x), parseInt(d.outCoordsArray[2].y)).setFinalPosition(parseInt(d.outCoordsArray[2].x), parseInt(b));
            } else {
              if ("toBottom" == c) {
                b = "image" == d.objType ? v + y + 40 + a / 2 : v + y + 40, b = (new CAAT.LinearPath).setInitialPosition(parseInt(d.outCoordsArray[2].x), parseInt(d.outCoordsArray[2].y)).setFinalPosition(parseInt(d.outCoordsArray[2].x), parseInt(b));
              } else {
                "alpha" == c && d.Actor.setGlobalAlpha(!0).addBehavior((new CAAT.Behavior.AlphaBehavior).setValues(d.endAlpha, 0).setDelayTime(d.motionTime + d.delayTime + d.waitOnSceneTime, d.outOfSceneTime));
                return;
              }
            }
          }
        }
        d.Actor.addBehavior((new CAAT.Behavior.PathBehavior).setValues(b).setDelayTime(d.motionTime + d.delayTime + d.waitOnSceneTime, d.outOfSceneTime).setCycle(!1).setAutoRotate(!1).setInterpolator(d.easing));
      }
    }
    var b = [], c = 0, L = "scene-0", l, w, z, J = [], S = 0, K = !1, x = 1920, y = 700, u = 240, v = 150;
    l = "#" + $;
    w = aa;
    z = ba;
    (function() {
      jQuery(document).on("click touchend", l + " .curvy-nav-elem", function() {
        var b = parseInt(jQuery(this).attr("ref").toString().replace("nav-elem-", ""));
        if (b != c) {
          var e = !1;
          "true" === z && !1 === C && (e = !0, jQuery(l + " #stopAllScenesBtn").trigger("click"));
          E() ? I(b) : (F(b), P());
          e && jQuery(l + " #playAllScenesBtn").trigger("click");
          jQuery(l + " .curvy-nav-elem.active").removeClass("active");
          jQuery(this).addClass("active");
        }
      });
    })();
    (function() {
      jQuery(document).on("click", l + " #stopAllScenesBtn", function() {
        C = !0;
        "undefined" != typeof B && clearInterval(B);
        D = !1;
      });
    })();
    (function() {
      jQuery(document).on("click", l + " #playAllScenesBtn", function() {
        D || (D = !0, C = !1, X());
      });
    })();
    null != Q && (k = Q, E() ? (ca(), I(0), jQuery(l + ' .curvy-nav-elem[ref="nav-elem-0"]').addClass("active")) : da());
    var k, q, V, D = !1;
    jQuery(l + " #playBtn").live("click", function() {
      D || (D = !0, P(), setTimeout(function() {
        D = !1;
      }, 1E3 * b[c].sceneDetails.sceneDelay));
    });
    var C = !1, B, Z = 0, H = 0;
    jQuery(window).blur(function() {
      C || "undefined" === typeof B || (H = 1E3 * b[c].sceneDetails.sceneDelay - ((new Date).getTime() - Z), clearTimeout(B));
    });
    jQuery(window).focus(function() {
      C || 0 === H || (B = setTimeout(Y, H), H = 0);
    });
    var t = 0;
  };
})();